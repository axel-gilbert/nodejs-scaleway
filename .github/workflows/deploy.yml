name: Build and Push

on:
  push:
    branches: [ "main", "dev" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      SCW_REGISTRY_NAMESPACE: ${{ secrets.SCW_REGISTRY_NAMESPACE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set variables
        id: vars
        shell: bash
        env:
          SCW_CONTAINER_PROD_NAME: ${{ secrets.SCW_CONTAINER_PROD_NAME }}
          SCW_CONTAINER_DEV_NAME: ${{ secrets.SCW_CONTAINER_DEV_NAME }}
        run: |
          BRANCH="${GITHUB_REF##*/}"
          if [[ "$BRANCH" == "main" ]]; then
            ENV=prod
          else
            ENV=dev
          fi
          REGISTRY_HOST="${SCW_REGISTRY_NAMESPACE%%/*}"
          IMAGE_REPO="$SCW_REGISTRY_NAMESPACE/hello-world"
          if [[ "$ENV" == "prod" ]]; then
            CONTAINER_NAME="$SCW_CONTAINER_PROD_NAME"
            NODE_ENV=production
          else
            CONTAINER_NAME="$SCW_CONTAINER_DEV_NAME"
            NODE_ENV=development
          fi
          echo "env=$ENV" >> "$GITHUB_OUTPUT"
          echo "registry_host=$REGISTRY_HOST" >> "$GITHUB_OUTPUT"
          echo "image_repo=$IMAGE_REPO" >> "$GITHUB_OUTPUT"
          echo "container_name=$CONTAINER_NAME" >> "$GITHUB_OUTPUT"
          echo "node_env=$NODE_ENV" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Scaleway Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.vars.outputs.registry_host }}
          username: ${{ secrets.SCW_ACCESS_KEY }}
          password: ${{ secrets.SCW_SECRET_KEY }}

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          build-args: |
            NODE_ENV=${{ steps.vars.outputs.node_env }}
          tags: |
            ${{ steps.vars.outputs.image_repo }}:${{ steps.vars.outputs.env }}
            ${{ steps.vars.outputs.image_repo }}:${{ github.sha }}

      - name: Install Scaleway CLI
        uses: scaleway/action-scw@v0

      - name: Deploy to Serverless Container
        if: ${{ steps.vars.outputs.container_name != '' }}
        env:
          SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
          SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
          SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
          SCW_DEFAULT_ORGANIZATION_ID: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
          SCW_REGION: ${{ secrets.SCW_REGION }}
        run: |
          echo "Deploying image to container: ${{ steps.vars.outputs.container_name }}"
          scw serverless container deploy \
            name=${{ steps.vars.outputs.container_name }} \
            image=${{ steps.vars.outputs.image_repo }}:${{ steps.vars.outputs.env }} \
            region=$SCW_REGION \
            min-scale=0 max-scale=1 \
            cpu-limit=140m memory-limit=256Mi \
            port=3000
